buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.22.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'war'
apply plugin: 'maven'

group = 'conorheffron'
version = '1.5.3'
description = "Sample Data Manager"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.rabbitmq', name: 'amqp-client', version:'3.3.4'
    compile group: 'io.searchbox', name: 'jest', version:'0.1.6'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version:'0.90.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version:'1.5.6.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version:'8.0.33'
    compile group: 'com.sparkpost', name: 'sparkpost-lib', version:'0.16.1'
    compile group: 'com.h2database', name: 'h2', version:'1.4.196'
    compile group: 'org.apache.maven.reporting', name: 'maven-reporting-api', version:'3.1.1'
    compile group: 'org.jacoco', name: 'jacoco-maven-plugin', version:'0.8.11'
 
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version:'3.2.4'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version:'8.5.16'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.5.6.RELEASE') {
		exclude(module: 'commons-logging')
    }
}

task buildDocker(type: Docker, dependsOn: build) {
  applicationName = war.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from war
      into "${stageDir}/target"
    }
  }
}
